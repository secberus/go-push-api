//
// Copyright 2018-2025 Secberus, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.21.12
// source: types/v1/column.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Integer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   *int32 `protobuf:"zigzag32,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	Default *int32 `protobuf:"zigzag32,2,opt,name=default,proto3,oneof" json:"default,omitempty"`
}

func (x *Integer) Reset() {
	*x = Integer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_column_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Integer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Integer) ProtoMessage() {}

func (x *Integer) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_column_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Integer.ProtoReflect.Descriptor instead.
func (*Integer) Descriptor() ([]byte, []int) {
	return file_types_v1_column_proto_rawDescGZIP(), []int{0}
}

func (x *Integer) GetValue() int32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *Integer) GetDefault() int32 {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return 0
}

type Smallint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   *int32 `protobuf:"zigzag32,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	Default *int32 `protobuf:"zigzag32,2,opt,name=default,proto3,oneof" json:"default,omitempty"`
}

func (x *Smallint) Reset() {
	*x = Smallint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_column_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Smallint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Smallint) ProtoMessage() {}

func (x *Smallint) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_column_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Smallint.ProtoReflect.Descriptor instead.
func (*Smallint) Descriptor() ([]byte, []int) {
	return file_types_v1_column_proto_rawDescGZIP(), []int{1}
}

func (x *Smallint) GetValue() int32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *Smallint) GetDefault() int32 {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return 0
}

type Bigint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   *int64 `protobuf:"zigzag64,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	Default *int64 `protobuf:"zigzag64,2,opt,name=default,proto3,oneof" json:"default,omitempty"`
}

func (x *Bigint) Reset() {
	*x = Bigint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_column_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bigint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bigint) ProtoMessage() {}

func (x *Bigint) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_column_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bigint.ProtoReflect.Descriptor instead.
func (*Bigint) Descriptor() ([]byte, []int) {
	return file_types_v1_column_proto_rawDescGZIP(), []int{2}
}

func (x *Bigint) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *Bigint) GetDefault() int64 {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return 0
}

type Numeric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     *float64 `protobuf:"fixed64,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	Precision *int32   `protobuf:"varint,2,opt,name=precision,proto3,oneof" json:"precision,omitempty"`
	Scale     *int32   `protobuf:"varint,3,opt,name=scale,proto3,oneof" json:"scale,omitempty"`
	Default   *float64 `protobuf:"fixed64,4,opt,name=default,proto3,oneof" json:"default,omitempty"`
}

func (x *Numeric) Reset() {
	*x = Numeric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_column_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Numeric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Numeric) ProtoMessage() {}

func (x *Numeric) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_column_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Numeric.ProtoReflect.Descriptor instead.
func (*Numeric) Descriptor() ([]byte, []int) {
	return file_types_v1_column_proto_rawDescGZIP(), []int{3}
}

func (x *Numeric) GetValue() float64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *Numeric) GetPrecision() int32 {
	if x != nil && x.Precision != nil {
		return *x.Precision
	}
	return 0
}

func (x *Numeric) GetScale() int32 {
	if x != nil && x.Scale != nil {
		return *x.Scale
	}
	return 0
}

func (x *Numeric) GetDefault() float64 {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return 0
}

type Decimal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     *float64 `protobuf:"fixed64,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	Precision *int32   `protobuf:"varint,2,opt,name=precision,proto3,oneof" json:"precision,omitempty"`
	Scale     *int32   `protobuf:"varint,3,opt,name=scale,proto3,oneof" json:"scale,omitempty"`
	Default   *float64 `protobuf:"fixed64,4,opt,name=default,proto3,oneof" json:"default,omitempty"`
}

func (x *Decimal) Reset() {
	*x = Decimal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_column_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Decimal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Decimal) ProtoMessage() {}

func (x *Decimal) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_column_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Decimal.ProtoReflect.Descriptor instead.
func (*Decimal) Descriptor() ([]byte, []int) {
	return file_types_v1_column_proto_rawDescGZIP(), []int{4}
}

func (x *Decimal) GetValue() float64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *Decimal) GetPrecision() int32 {
	if x != nil && x.Precision != nil {
		return *x.Precision
	}
	return 0
}

func (x *Decimal) GetScale() int32 {
	if x != nil && x.Scale != nil {
		return *x.Scale
	}
	return 0
}

func (x *Decimal) GetDefault() float64 {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return 0
}

type Real struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   *float32 `protobuf:"fixed32,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	Default *float32 `protobuf:"fixed32,2,opt,name=default,proto3,oneof" json:"default,omitempty"`
}

func (x *Real) Reset() {
	*x = Real{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_column_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Real) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Real) ProtoMessage() {}

func (x *Real) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_column_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Real.ProtoReflect.Descriptor instead.
func (*Real) Descriptor() ([]byte, []int) {
	return file_types_v1_column_proto_rawDescGZIP(), []int{5}
}

func (x *Real) GetValue() float32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *Real) GetDefault() float32 {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return 0
}

type Double struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   *float64 `protobuf:"fixed64,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	Default *float64 `protobuf:"fixed64,2,opt,name=default,proto3,oneof" json:"default,omitempty"`
}

func (x *Double) Reset() {
	*x = Double{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_column_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Double) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Double) ProtoMessage() {}

func (x *Double) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_column_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Double.ProtoReflect.Descriptor instead.
func (*Double) Descriptor() ([]byte, []int) {
	return file_types_v1_column_proto_rawDescGZIP(), []int{6}
}

func (x *Double) GetValue() float64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *Double) GetDefault() float64 {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return 0
}

type Float struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     *float64 `protobuf:"fixed64,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	Precision *uint32  `protobuf:"varint,2,opt,name=precision,proto3,oneof" json:"precision,omitempty"`
	Default   *float64 `protobuf:"fixed64,3,opt,name=default,proto3,oneof" json:"default,omitempty"`
}

func (x *Float) Reset() {
	*x = Float{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_column_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Float) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Float) ProtoMessage() {}

func (x *Float) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_column_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Float.ProtoReflect.Descriptor instead.
func (*Float) Descriptor() ([]byte, []int) {
	return file_types_v1_column_proto_rawDescGZIP(), []int{7}
}

func (x *Float) GetValue() float64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *Float) GetPrecision() uint32 {
	if x != nil && x.Precision != nil {
		return *x.Precision
	}
	return 0
}

func (x *Float) GetDefault() float64 {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return 0
}

type Char struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   *string `protobuf:"bytes,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	Length  *uint32 `protobuf:"varint,2,opt,name=length,proto3,oneof" json:"length,omitempty"`
	Default *string `protobuf:"bytes,3,opt,name=default,proto3,oneof" json:"default,omitempty"`
}

func (x *Char) Reset() {
	*x = Char{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_column_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Char) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Char) ProtoMessage() {}

func (x *Char) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_column_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Char.ProtoReflect.Descriptor instead.
func (*Char) Descriptor() ([]byte, []int) {
	return file_types_v1_column_proto_rawDescGZIP(), []int{8}
}

func (x *Char) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *Char) GetLength() uint32 {
	if x != nil && x.Length != nil {
		return *x.Length
	}
	return 0
}

func (x *Char) GetDefault() string {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return ""
}

type Varchar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   *string `protobuf:"bytes,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	Length  *uint32 `protobuf:"varint,2,opt,name=length,proto3,oneof" json:"length,omitempty"`
	Default *string `protobuf:"bytes,3,opt,name=default,proto3,oneof" json:"default,omitempty"`
}

func (x *Varchar) Reset() {
	*x = Varchar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_column_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Varchar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Varchar) ProtoMessage() {}

func (x *Varchar) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_column_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Varchar.ProtoReflect.Descriptor instead.
func (*Varchar) Descriptor() ([]byte, []int) {
	return file_types_v1_column_proto_rawDescGZIP(), []int{9}
}

func (x *Varchar) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *Varchar) GetLength() uint32 {
	if x != nil && x.Length != nil {
		return *x.Length
	}
	return 0
}

func (x *Varchar) GetDefault() string {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return ""
}

type Text struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   *string `protobuf:"bytes,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	Default *string `protobuf:"bytes,2,opt,name=default,proto3,oneof" json:"default,omitempty"`
}

func (x *Text) Reset() {
	*x = Text{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_column_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Text) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Text) ProtoMessage() {}

func (x *Text) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_column_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Text.ProtoReflect.Descriptor instead.
func (*Text) Descriptor() ([]byte, []int) {
	return file_types_v1_column_proto_rawDescGZIP(), []int{10}
}

func (x *Text) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *Text) GetDefault() string {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return ""
}

type Bytea struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
}

func (x *Bytea) Reset() {
	*x = Bytea{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_column_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bytea) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bytea) ProtoMessage() {}

func (x *Bytea) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_column_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bytea.ProtoReflect.Descriptor instead.
func (*Bytea) Descriptor() ([]byte, []int) {
	return file_types_v1_column_proto_rawDescGZIP(), []int{11}
}

func (x *Bytea) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type Timestamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   *string `protobuf:"bytes,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	Default *string `protobuf:"bytes,2,opt,name=default,proto3,oneof" json:"default,omitempty"`
}

func (x *Timestamp) Reset() {
	*x = Timestamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_column_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timestamp) ProtoMessage() {}

func (x *Timestamp) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_column_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timestamp.ProtoReflect.Descriptor instead.
func (*Timestamp) Descriptor() ([]byte, []int) {
	return file_types_v1_column_proto_rawDescGZIP(), []int{12}
}

func (x *Timestamp) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *Timestamp) GetDefault() string {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return ""
}

type Timestamptz struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   *string `protobuf:"bytes,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	Default *string `protobuf:"bytes,2,opt,name=default,proto3,oneof" json:"default,omitempty"`
}

func (x *Timestamptz) Reset() {
	*x = Timestamptz{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_column_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timestamptz) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timestamptz) ProtoMessage() {}

func (x *Timestamptz) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_column_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timestamptz.ProtoReflect.Descriptor instead.
func (*Timestamptz) Descriptor() ([]byte, []int) {
	return file_types_v1_column_proto_rawDescGZIP(), []int{13}
}

func (x *Timestamptz) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *Timestamptz) GetDefault() string {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return ""
}

type Date struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   *string `protobuf:"bytes,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	Default *string `protobuf:"bytes,2,opt,name=default,proto3,oneof" json:"default,omitempty"`
}

func (x *Date) Reset() {
	*x = Date{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_column_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Date) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Date) ProtoMessage() {}

func (x *Date) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_column_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Date.ProtoReflect.Descriptor instead.
func (*Date) Descriptor() ([]byte, []int) {
	return file_types_v1_column_proto_rawDescGZIP(), []int{14}
}

func (x *Date) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *Date) GetDefault() string {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return ""
}

type Time struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   *string `protobuf:"bytes,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	Default *string `protobuf:"bytes,2,opt,name=default,proto3,oneof" json:"default,omitempty"`
}

func (x *Time) Reset() {
	*x = Time{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_column_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Time) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Time) ProtoMessage() {}

func (x *Time) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_column_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Time.ProtoReflect.Descriptor instead.
func (*Time) Descriptor() ([]byte, []int) {
	return file_types_v1_column_proto_rawDescGZIP(), []int{15}
}

func (x *Time) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *Time) GetDefault() string {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return ""
}

type Timetz struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   *string `protobuf:"bytes,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	Default *string `protobuf:"bytes,2,opt,name=default,proto3,oneof" json:"default,omitempty"`
}

func (x *Timetz) Reset() {
	*x = Timetz{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_column_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timetz) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timetz) ProtoMessage() {}

func (x *Timetz) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_column_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timetz.ProtoReflect.Descriptor instead.
func (*Timetz) Descriptor() ([]byte, []int) {
	return file_types_v1_column_proto_rawDescGZIP(), []int{16}
}

func (x *Timetz) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *Timetz) GetDefault() string {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return ""
}

type Boolean struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   *bool `protobuf:"varint,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	Default *bool `protobuf:"varint,2,opt,name=default,proto3,oneof" json:"default,omitempty"`
}

func (x *Boolean) Reset() {
	*x = Boolean{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_column_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Boolean) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Boolean) ProtoMessage() {}

func (x *Boolean) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_column_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Boolean.ProtoReflect.Descriptor instead.
func (*Boolean) Descriptor() ([]byte, []int) {
	return file_types_v1_column_proto_rawDescGZIP(), []int{17}
}

func (x *Boolean) GetValue() bool {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return false
}

func (x *Boolean) GetDefault() bool {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return false
}

type Enum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   *string  `protobuf:"bytes,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	Members []string `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
	Default *string  `protobuf:"bytes,3,opt,name=default,proto3,oneof" json:"default,omitempty"`
}

func (x *Enum) Reset() {
	*x = Enum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_column_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Enum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Enum) ProtoMessage() {}

func (x *Enum) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_column_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Enum.ProtoReflect.Descriptor instead.
func (*Enum) Descriptor() ([]byte, []int) {
	return file_types_v1_column_proto_rawDescGZIP(), []int{18}
}

func (x *Enum) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *Enum) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *Enum) GetDefault() string {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return ""
}

type Inet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   *string `protobuf:"bytes,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	Default *string `protobuf:"bytes,2,opt,name=default,proto3,oneof" json:"default,omitempty"`
}

func (x *Inet) Reset() {
	*x = Inet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_column_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Inet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Inet) ProtoMessage() {}

func (x *Inet) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_column_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Inet.ProtoReflect.Descriptor instead.
func (*Inet) Descriptor() ([]byte, []int) {
	return file_types_v1_column_proto_rawDescGZIP(), []int{19}
}

func (x *Inet) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *Inet) GetDefault() string {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return ""
}

type Cidr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   *string `protobuf:"bytes,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	Default *string `protobuf:"bytes,2,opt,name=default,proto3,oneof" json:"default,omitempty"`
}

func (x *Cidr) Reset() {
	*x = Cidr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_column_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cidr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cidr) ProtoMessage() {}

func (x *Cidr) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_column_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cidr.ProtoReflect.Descriptor instead.
func (*Cidr) Descriptor() ([]byte, []int) {
	return file_types_v1_column_proto_rawDescGZIP(), []int{20}
}

func (x *Cidr) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *Cidr) GetDefault() string {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return ""
}

type Macaddr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   *string `protobuf:"bytes,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	Default *string `protobuf:"bytes,2,opt,name=default,proto3,oneof" json:"default,omitempty"`
}

func (x *Macaddr) Reset() {
	*x = Macaddr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_column_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Macaddr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Macaddr) ProtoMessage() {}

func (x *Macaddr) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_column_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Macaddr.ProtoReflect.Descriptor instead.
func (*Macaddr) Descriptor() ([]byte, []int) {
	return file_types_v1_column_proto_rawDescGZIP(), []int{21}
}

func (x *Macaddr) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *Macaddr) GetDefault() string {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return ""
}

type Macaddr8 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   *string `protobuf:"bytes,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	Default *string `protobuf:"bytes,2,opt,name=default,proto3,oneof" json:"default,omitempty"`
}

func (x *Macaddr8) Reset() {
	*x = Macaddr8{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_column_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Macaddr8) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Macaddr8) ProtoMessage() {}

func (x *Macaddr8) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_column_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Macaddr8.ProtoReflect.Descriptor instead.
func (*Macaddr8) Descriptor() ([]byte, []int) {
	return file_types_v1_column_proto_rawDescGZIP(), []int{22}
}

func (x *Macaddr8) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *Macaddr8) GetDefault() string {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return ""
}

type Uuid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *string `protobuf:"bytes,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
}

func (x *Uuid) Reset() {
	*x = Uuid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_column_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Uuid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Uuid) ProtoMessage() {}

func (x *Uuid) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_column_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Uuid.ProtoReflect.Descriptor instead.
func (*Uuid) Descriptor() ([]byte, []int) {
	return file_types_v1_column_proto_rawDescGZIP(), []int{23}
}

func (x *Uuid) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type Jsonb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   *string `protobuf:"bytes,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	Default *string `protobuf:"bytes,2,opt,name=default,proto3,oneof" json:"default,omitempty"`
}

func (x *Jsonb) Reset() {
	*x = Jsonb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_column_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Jsonb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Jsonb) ProtoMessage() {}

func (x *Jsonb) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_column_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Jsonb.ProtoReflect.Descriptor instead.
func (*Jsonb) Descriptor() ([]byte, []int) {
	return file_types_v1_column_proto_rawDescGZIP(), []int{24}
}

func (x *Jsonb) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *Jsonb) GetDefault() string {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return ""
}

type DataType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Union:
	//
	//	*DataType_Text
	//	*DataType_Jsonb
	//	*DataType_Boolean
	//	*DataType_Integer
	//	*DataType_Smallint
	//	*DataType_Bigint
	//	*DataType_Real
	//	*DataType_Double
	//	*DataType_Float
	//	*DataType_Char
	//	*DataType_Varchar
	//	*DataType_Bytea
	//	*DataType_Timestamp
	//	*DataType_Timestamptz
	//	*DataType_Date
	//	*DataType_Time
	//	*DataType_Timetz
	//	*DataType_Enum
	//	*DataType_Inet
	//	*DataType_Cidr
	//	*DataType_Macaddr
	//	*DataType_Macaddr8
	//	*DataType_Uuid
	//	*DataType_Numeric
	//	*DataType_Decimal
	Union isDataType_Union `protobuf_oneof:"union"`
}

func (x *DataType) Reset() {
	*x = DataType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_column_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataType) ProtoMessage() {}

func (x *DataType) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_column_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataType.ProtoReflect.Descriptor instead.
func (*DataType) Descriptor() ([]byte, []int) {
	return file_types_v1_column_proto_rawDescGZIP(), []int{25}
}

func (m *DataType) GetUnion() isDataType_Union {
	if m != nil {
		return m.Union
	}
	return nil
}

func (x *DataType) GetText() *Text {
	if x, ok := x.GetUnion().(*DataType_Text); ok {
		return x.Text
	}
	return nil
}

func (x *DataType) GetJsonb() *Jsonb {
	if x, ok := x.GetUnion().(*DataType_Jsonb); ok {
		return x.Jsonb
	}
	return nil
}

func (x *DataType) GetBoolean() *Boolean {
	if x, ok := x.GetUnion().(*DataType_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (x *DataType) GetInteger() *Integer {
	if x, ok := x.GetUnion().(*DataType_Integer); ok {
		return x.Integer
	}
	return nil
}

func (x *DataType) GetSmallint() *Smallint {
	if x, ok := x.GetUnion().(*DataType_Smallint); ok {
		return x.Smallint
	}
	return nil
}

func (x *DataType) GetBigint() *Bigint {
	if x, ok := x.GetUnion().(*DataType_Bigint); ok {
		return x.Bigint
	}
	return nil
}

func (x *DataType) GetReal() *Real {
	if x, ok := x.GetUnion().(*DataType_Real); ok {
		return x.Real
	}
	return nil
}

func (x *DataType) GetDouble() *Double {
	if x, ok := x.GetUnion().(*DataType_Double); ok {
		return x.Double
	}
	return nil
}

func (x *DataType) GetFloat() *Float {
	if x, ok := x.GetUnion().(*DataType_Float); ok {
		return x.Float
	}
	return nil
}

func (x *DataType) GetChar() *Char {
	if x, ok := x.GetUnion().(*DataType_Char); ok {
		return x.Char
	}
	return nil
}

func (x *DataType) GetVarchar() *Varchar {
	if x, ok := x.GetUnion().(*DataType_Varchar); ok {
		return x.Varchar
	}
	return nil
}

func (x *DataType) GetBytea() *Bytea {
	if x, ok := x.GetUnion().(*DataType_Bytea); ok {
		return x.Bytea
	}
	return nil
}

func (x *DataType) GetTimestamp() *Timestamp {
	if x, ok := x.GetUnion().(*DataType_Timestamp); ok {
		return x.Timestamp
	}
	return nil
}

func (x *DataType) GetTimestamptz() *Timestamptz {
	if x, ok := x.GetUnion().(*DataType_Timestamptz); ok {
		return x.Timestamptz
	}
	return nil
}

func (x *DataType) GetDate() *Date {
	if x, ok := x.GetUnion().(*DataType_Date); ok {
		return x.Date
	}
	return nil
}

func (x *DataType) GetTime() *Time {
	if x, ok := x.GetUnion().(*DataType_Time); ok {
		return x.Time
	}
	return nil
}

func (x *DataType) GetTimetz() *Timetz {
	if x, ok := x.GetUnion().(*DataType_Timetz); ok {
		return x.Timetz
	}
	return nil
}

func (x *DataType) GetEnum() *Enum {
	if x, ok := x.GetUnion().(*DataType_Enum); ok {
		return x.Enum
	}
	return nil
}

func (x *DataType) GetInet() *Inet {
	if x, ok := x.GetUnion().(*DataType_Inet); ok {
		return x.Inet
	}
	return nil
}

func (x *DataType) GetCidr() *Cidr {
	if x, ok := x.GetUnion().(*DataType_Cidr); ok {
		return x.Cidr
	}
	return nil
}

func (x *DataType) GetMacaddr() *Macaddr {
	if x, ok := x.GetUnion().(*DataType_Macaddr); ok {
		return x.Macaddr
	}
	return nil
}

func (x *DataType) GetMacaddr8() *Macaddr8 {
	if x, ok := x.GetUnion().(*DataType_Macaddr8); ok {
		return x.Macaddr8
	}
	return nil
}

func (x *DataType) GetUuid() *Uuid {
	if x, ok := x.GetUnion().(*DataType_Uuid); ok {
		return x.Uuid
	}
	return nil
}

func (x *DataType) GetNumeric() *Numeric {
	if x, ok := x.GetUnion().(*DataType_Numeric); ok {
		return x.Numeric
	}
	return nil
}

func (x *DataType) GetDecimal() *Decimal {
	if x, ok := x.GetUnion().(*DataType_Decimal); ok {
		return x.Decimal
	}
	return nil
}

type isDataType_Union interface {
	isDataType_Union()
}

type DataType_Text struct {
	Text *Text `protobuf:"bytes,1,opt,name=text,proto3,oneof"`
}

type DataType_Jsonb struct {
	Jsonb *Jsonb `protobuf:"bytes,2,opt,name=jsonb,proto3,oneof"`
}

type DataType_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,3,opt,name=boolean,proto3,oneof"`
}

type DataType_Integer struct {
	Integer *Integer `protobuf:"bytes,4,opt,name=integer,proto3,oneof"`
}

type DataType_Smallint struct {
	Smallint *Smallint `protobuf:"bytes,5,opt,name=smallint,proto3,oneof"`
}

type DataType_Bigint struct {
	Bigint *Bigint `protobuf:"bytes,6,opt,name=bigint,proto3,oneof"`
}

type DataType_Real struct {
	Real *Real `protobuf:"bytes,7,opt,name=real,proto3,oneof"`
}

type DataType_Double struct {
	Double *Double `protobuf:"bytes,8,opt,name=double,proto3,oneof"`
}

type DataType_Float struct {
	Float *Float `protobuf:"bytes,9,opt,name=float,proto3,oneof"`
}

type DataType_Char struct {
	Char *Char `protobuf:"bytes,10,opt,name=char,proto3,oneof"`
}

type DataType_Varchar struct {
	Varchar *Varchar `protobuf:"bytes,11,opt,name=varchar,proto3,oneof"`
}

type DataType_Bytea struct {
	Bytea *Bytea `protobuf:"bytes,12,opt,name=bytea,proto3,oneof"`
}

type DataType_Timestamp struct {
	Timestamp *Timestamp `protobuf:"bytes,13,opt,name=timestamp,proto3,oneof"`
}

type DataType_Timestamptz struct {
	Timestamptz *Timestamptz `protobuf:"bytes,14,opt,name=timestamptz,proto3,oneof"`
}

type DataType_Date struct {
	Date *Date `protobuf:"bytes,15,opt,name=date,proto3,oneof"`
}

type DataType_Time struct {
	Time *Time `protobuf:"bytes,16,opt,name=time,proto3,oneof"`
}

type DataType_Timetz struct {
	Timetz *Timetz `protobuf:"bytes,17,opt,name=timetz,proto3,oneof"`
}

type DataType_Enum struct {
	Enum *Enum `protobuf:"bytes,18,opt,name=enum,proto3,oneof"`
}

type DataType_Inet struct {
	Inet *Inet `protobuf:"bytes,19,opt,name=inet,proto3,oneof"`
}

type DataType_Cidr struct {
	Cidr *Cidr `protobuf:"bytes,20,opt,name=cidr,proto3,oneof"`
}

type DataType_Macaddr struct {
	Macaddr *Macaddr `protobuf:"bytes,21,opt,name=macaddr,proto3,oneof"`
}

type DataType_Macaddr8 struct {
	Macaddr8 *Macaddr8 `protobuf:"bytes,22,opt,name=macaddr8,proto3,oneof"`
}

type DataType_Uuid struct {
	Uuid *Uuid `protobuf:"bytes,23,opt,name=uuid,proto3,oneof"`
}

type DataType_Numeric struct {
	Numeric *Numeric `protobuf:"bytes,24,opt,name=numeric,proto3,oneof"`
}

type DataType_Decimal struct {
	Decimal *Decimal `protobuf:"bytes,25,opt,name=decimal,proto3,oneof"`
}

func (*DataType_Text) isDataType_Union() {}

func (*DataType_Jsonb) isDataType_Union() {}

func (*DataType_Boolean) isDataType_Union() {}

func (*DataType_Integer) isDataType_Union() {}

func (*DataType_Smallint) isDataType_Union() {}

func (*DataType_Bigint) isDataType_Union() {}

func (*DataType_Real) isDataType_Union() {}

func (*DataType_Double) isDataType_Union() {}

func (*DataType_Float) isDataType_Union() {}

func (*DataType_Char) isDataType_Union() {}

func (*DataType_Varchar) isDataType_Union() {}

func (*DataType_Bytea) isDataType_Union() {}

func (*DataType_Timestamp) isDataType_Union() {}

func (*DataType_Timestamptz) isDataType_Union() {}

func (*DataType_Date) isDataType_Union() {}

func (*DataType_Time) isDataType_Union() {}

func (*DataType_Timetz) isDataType_Union() {}

func (*DataType_Enum) isDataType_Union() {}

func (*DataType_Inet) isDataType_Union() {}

func (*DataType_Cidr) isDataType_Union() {}

func (*DataType_Macaddr) isDataType_Union() {}

func (*DataType_Macaddr8) isDataType_Union() {}

func (*DataType_Uuid) isDataType_Union() {}

func (*DataType_Numeric) isDataType_Union() {}

func (*DataType_Decimal) isDataType_Union() {}

type Column struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PrimaryKey bool      `protobuf:"varint,2,opt,name=primary_key,json=primaryKey,proto3" json:"primary_key,omitempty"` // true adds this column to the table's primary key
	Nillable   bool      `protobuf:"varint,3,opt,name=nillable,proto3" json:"nillable,omitempty"`                       // true allows this column to be NULL
	Unique     bool      `protobuf:"varint,4,opt,name=unique,proto3" json:"unique,omitempty"`                           // true creates a UNIQUE constraint on this column in the table
	DataType   *DataType `protobuf:"bytes,5,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
}

func (x *Column) Reset() {
	*x = Column{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_v1_column_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column) ProtoMessage() {}

func (x *Column) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_column_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column.ProtoReflect.Descriptor instead.
func (*Column) Descriptor() ([]byte, []int) {
	return file_types_v1_column_proto_rawDescGZIP(), []int{26}
}

func (x *Column) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Column) GetPrimaryKey() bool {
	if x != nil {
		return x.PrimaryKey
	}
	return false
}

func (x *Column) GetNillable() bool {
	if x != nil {
		return x.Nillable
	}
	return false
}

func (x *Column) GetUnique() bool {
	if x != nil {
		return x.Unique
	}
	return false
}

func (x *Column) GetDataType() *DataType {
	if x != nil {
		return x.DataType
	}
	return nil
}

var File_types_v1_column_proto protoreflect.FileDescriptor

var file_types_v1_column_proto_rawDesc = []byte{
	0x0a, 0x15, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x59,
	0x0a, 0x07, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x11, 0x48, 0x01, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x78, 0x0a, 0x08, 0x53, 0x6d, 0x61,
	0x6c, 0x6c, 0x69, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x11, 0x42, 0x0d, 0xba, 0x48, 0x0a, 0x3a, 0x08, 0x18, 0xfe, 0xff, 0x03, 0x28,
	0xff, 0xff, 0x03, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x2c, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11,
	0x42, 0x0d, 0xba, 0x48, 0x0a, 0x3a, 0x08, 0x18, 0xfe, 0xff, 0x03, 0x28, 0xff, 0xff, 0x03, 0x48,
	0x01, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x22, 0x58, 0x0a, 0x06, 0x42, 0x69, 0x67, 0x69, 0x6e, 0x74, 0x12, 0x19, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x48, 0x00, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x48, 0x01, 0x52, 0x07, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0xc5, 0x01,
	0x0a, 0x07, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x12, 0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xba, 0x48, 0x05, 0x1a, 0x03, 0x18, 0xe8,
	0x07, 0x48, 0x01, 0x52, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x25, 0x0a, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x0a, 0xba, 0x48, 0x07, 0x1a, 0x05, 0x18, 0xe8, 0x07, 0x20, 0x00, 0x48, 0x02, 0x52, 0x05,
	0x73, 0x63, 0x61, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x48, 0x03, 0x52, 0x07, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0xc5, 0x01, 0x0a, 0x07, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61,
	0x6c, 0x12, 0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x09,
	0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x08, 0xba, 0x48, 0x05, 0x1a, 0x03, 0x18, 0xe8, 0x07, 0x48, 0x01, 0x52, 0x09, 0x70, 0x72, 0x65,
	0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x05, 0x73, 0x63, 0x61,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xba, 0x48, 0x07, 0x1a, 0x05, 0x18,
	0xe8, 0x07, 0x20, 0x00, 0x48, 0x02, 0x52, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x03, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72,
	0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x63, 0x61, 0x6c,
	0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x56, 0x0a,
	0x04, 0x52, 0x65, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x48, 0x01, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x58, 0x0a, 0x06, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12,
	0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01, 0x52, 0x07, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22,
	0x91, 0x01, 0x0a, 0x05, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xba, 0x48, 0x04, 0x2a, 0x02, 0x18, 0x35,
	0x48, 0x01, 0x52, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x02, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72,
	0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x22, 0x7e, 0x0a, 0x04, 0x43, 0x68, 0x61, 0x72, 0x12, 0x19, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x88,
	0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x07, 0x56, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x12,
	0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x06, 0x6c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x56, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22,
	0x2c, 0x0a, 0x05, 0x42, 0x79, 0x74, 0x65, 0x61, 0x12, 0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5b, 0x0a,
	0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x19, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x5d, 0x0a, 0x0b, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x74, 0x7a, 0x12, 0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x56, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x22, 0x56, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x58, 0x0a, 0x06, 0x54, 0x69, 0x6d,
	0x65, 0x74, 0x7a, 0x12, 0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d,
	0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x22, 0x59, 0x0a, 0x07, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x12, 0x19,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x07, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x70,
	0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x22, 0x56, 0x0a, 0x04, 0x49, 0x6e, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x88,
	0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x56, 0x0a, 0x04, 0x43, 0x69, 0x64, 0x72,
	0x12, 0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x22, 0x59, 0x0a, 0x07, 0x4d, 0x61, 0x63, 0x61, 0x64, 0x64, 0x72, 0x12, 0x19, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x5a, 0x0a, 0x08, 0x4d,
	0x61, 0x63, 0x61, 0x64, 0x64, 0x72, 0x38, 0x12, 0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x88, 0x01,
	0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x2b, 0x0a, 0x04, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x57, 0x0a, 0x05, 0x4a, 0x73, 0x6f, 0x6e, 0x62, 0x12, 0x19, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0xd6, 0x08,
	0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x48, 0x00, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x27, 0x0a, 0x05, 0x6a, 0x73, 0x6f, 0x6e, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x62,
	0x48, 0x00, 0x52, 0x05, 0x6a, 0x73, 0x6f, 0x6e, 0x62, 0x12, 0x2d, 0x0a, 0x07, 0x62, 0x6f, 0x6f,
	0x6c, 0x65, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x48, 0x00, 0x52,
	0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x12, 0x2d, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x48, 0x00, 0x52, 0x07,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x08, 0x73, 0x6d, 0x61, 0x6c, 0x6c,
	0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x08, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x62, 0x69, 0x67,
	0x69, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x67, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x06, 0x62,
	0x69, 0x67, 0x69, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x72, 0x65, 0x61, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x04, 0x72, 0x65, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x06, 0x64,
	0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x48, 0x00, 0x52,
	0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x48, 0x00, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74,
	0x12, 0x24, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x48, 0x00,
	0x52, 0x04, 0x63, 0x68, 0x61, 0x72, 0x12, 0x2d, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61,
	0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x48, 0x00, 0x52, 0x07, 0x76, 0x61,
	0x72, 0x63, 0x68, 0x61, 0x72, 0x12, 0x27, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x61, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x79, 0x74, 0x65, 0x61, 0x48, 0x00, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x61, 0x12, 0x33,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x39, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x74, 0x7a, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x74, 0x7a, 0x48,
	0x00, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x74, 0x7a, 0x12, 0x24,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x48, 0x00, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x74, 0x69,
	0x6d, 0x65, 0x74, 0x7a, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x7a, 0x48, 0x00, 0x52, 0x06,
	0x74, 0x69, 0x6d, 0x65, 0x74, 0x7a, 0x12, 0x24, 0x0a, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x6e, 0x75, 0x6d, 0x48, 0x00, 0x52, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x12, 0x24, 0x0a, 0x04,
	0x69, 0x6e, 0x65, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x65, 0x74, 0x48, 0x00, 0x52, 0x04, 0x69, 0x6e,
	0x65, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x63, 0x69, 0x64, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x69, 0x64, 0x72,
	0x48, 0x00, 0x52, 0x04, 0x63, 0x69, 0x64, 0x72, 0x12, 0x2d, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x61, 0x64, 0x64, 0x72, 0x48, 0x00, 0x52, 0x07,
	0x6d, 0x61, 0x63, 0x61, 0x64, 0x64, 0x72, 0x12, 0x30, 0x0a, 0x08, 0x6d, 0x61, 0x63, 0x61, 0x64,
	0x64, 0x72, 0x38, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x61, 0x64, 0x64, 0x72, 0x38, 0x48, 0x00, 0x52,
	0x08, 0x6d, 0x61, 0x63, 0x61, 0x64, 0x64, 0x72, 0x38, 0x12, 0x24, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x75, 0x69, 0x64, 0x48, 0x00, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12,
	0x2d, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x75, 0x6d, 0x65,
	0x72, 0x69, 0x63, 0x48, 0x00, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x12, 0x2d,
	0x0a, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x48, 0x00, 0x52, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x42, 0x07, 0x0a,
	0x05, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x22, 0xad, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x12, 0x1d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x3f, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x6e, 0x69, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x65, 0x63, 0x62, 0x65, 0x72, 0x75, 0x73, 0x2f, 0x67, 0x6f,
	0x2d, 0x70, 0x75, 0x73, 0x68, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_types_v1_column_proto_rawDescOnce sync.Once
	file_types_v1_column_proto_rawDescData = file_types_v1_column_proto_rawDesc
)

func file_types_v1_column_proto_rawDescGZIP() []byte {
	file_types_v1_column_proto_rawDescOnce.Do(func() {
		file_types_v1_column_proto_rawDescData = protoimpl.X.CompressGZIP(file_types_v1_column_proto_rawDescData)
	})
	return file_types_v1_column_proto_rawDescData
}

var file_types_v1_column_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_types_v1_column_proto_goTypes = []interface{}{
	(*Integer)(nil),     // 0: types.v1.Integer
	(*Smallint)(nil),    // 1: types.v1.Smallint
	(*Bigint)(nil),      // 2: types.v1.Bigint
	(*Numeric)(nil),     // 3: types.v1.Numeric
	(*Decimal)(nil),     // 4: types.v1.Decimal
	(*Real)(nil),        // 5: types.v1.Real
	(*Double)(nil),      // 6: types.v1.Double
	(*Float)(nil),       // 7: types.v1.Float
	(*Char)(nil),        // 8: types.v1.Char
	(*Varchar)(nil),     // 9: types.v1.Varchar
	(*Text)(nil),        // 10: types.v1.Text
	(*Bytea)(nil),       // 11: types.v1.Bytea
	(*Timestamp)(nil),   // 12: types.v1.Timestamp
	(*Timestamptz)(nil), // 13: types.v1.Timestamptz
	(*Date)(nil),        // 14: types.v1.Date
	(*Time)(nil),        // 15: types.v1.Time
	(*Timetz)(nil),      // 16: types.v1.Timetz
	(*Boolean)(nil),     // 17: types.v1.Boolean
	(*Enum)(nil),        // 18: types.v1.Enum
	(*Inet)(nil),        // 19: types.v1.Inet
	(*Cidr)(nil),        // 20: types.v1.Cidr
	(*Macaddr)(nil),     // 21: types.v1.Macaddr
	(*Macaddr8)(nil),    // 22: types.v1.Macaddr8
	(*Uuid)(nil),        // 23: types.v1.Uuid
	(*Jsonb)(nil),       // 24: types.v1.Jsonb
	(*DataType)(nil),    // 25: types.v1.DataType
	(*Column)(nil),      // 26: types.v1.Column
}
var file_types_v1_column_proto_depIdxs = []int32{
	10, // 0: types.v1.DataType.text:type_name -> types.v1.Text
	24, // 1: types.v1.DataType.jsonb:type_name -> types.v1.Jsonb
	17, // 2: types.v1.DataType.boolean:type_name -> types.v1.Boolean
	0,  // 3: types.v1.DataType.integer:type_name -> types.v1.Integer
	1,  // 4: types.v1.DataType.smallint:type_name -> types.v1.Smallint
	2,  // 5: types.v1.DataType.bigint:type_name -> types.v1.Bigint
	5,  // 6: types.v1.DataType.real:type_name -> types.v1.Real
	6,  // 7: types.v1.DataType.double:type_name -> types.v1.Double
	7,  // 8: types.v1.DataType.float:type_name -> types.v1.Float
	8,  // 9: types.v1.DataType.char:type_name -> types.v1.Char
	9,  // 10: types.v1.DataType.varchar:type_name -> types.v1.Varchar
	11, // 11: types.v1.DataType.bytea:type_name -> types.v1.Bytea
	12, // 12: types.v1.DataType.timestamp:type_name -> types.v1.Timestamp
	13, // 13: types.v1.DataType.timestamptz:type_name -> types.v1.Timestamptz
	14, // 14: types.v1.DataType.date:type_name -> types.v1.Date
	15, // 15: types.v1.DataType.time:type_name -> types.v1.Time
	16, // 16: types.v1.DataType.timetz:type_name -> types.v1.Timetz
	18, // 17: types.v1.DataType.enum:type_name -> types.v1.Enum
	19, // 18: types.v1.DataType.inet:type_name -> types.v1.Inet
	20, // 19: types.v1.DataType.cidr:type_name -> types.v1.Cidr
	21, // 20: types.v1.DataType.macaddr:type_name -> types.v1.Macaddr
	22, // 21: types.v1.DataType.macaddr8:type_name -> types.v1.Macaddr8
	23, // 22: types.v1.DataType.uuid:type_name -> types.v1.Uuid
	3,  // 23: types.v1.DataType.numeric:type_name -> types.v1.Numeric
	4,  // 24: types.v1.DataType.decimal:type_name -> types.v1.Decimal
	25, // 25: types.v1.Column.data_type:type_name -> types.v1.DataType
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_types_v1_column_proto_init() }
func file_types_v1_column_proto_init() {
	if File_types_v1_column_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_types_v1_column_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Integer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_column_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Smallint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_column_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bigint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_column_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Numeric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_column_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Decimal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_column_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Real); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_column_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Double); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_column_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Float); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_column_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Char); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_column_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Varchar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_column_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Text); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_column_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bytea); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_column_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timestamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_column_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timestamptz); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_column_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Date); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_column_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Time); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_column_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timetz); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_column_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Boolean); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_column_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Enum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_column_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Inet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_column_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cidr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_column_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Macaddr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_column_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Macaddr8); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_column_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Uuid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_column_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Jsonb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_column_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_v1_column_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Column); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_types_v1_column_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_types_v1_column_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_types_v1_column_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_types_v1_column_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_types_v1_column_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_types_v1_column_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_types_v1_column_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_types_v1_column_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_types_v1_column_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_types_v1_column_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_types_v1_column_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_types_v1_column_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_types_v1_column_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_types_v1_column_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_types_v1_column_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_types_v1_column_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_types_v1_column_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_types_v1_column_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_types_v1_column_proto_msgTypes[18].OneofWrappers = []interface{}{}
	file_types_v1_column_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_types_v1_column_proto_msgTypes[20].OneofWrappers = []interface{}{}
	file_types_v1_column_proto_msgTypes[21].OneofWrappers = []interface{}{}
	file_types_v1_column_proto_msgTypes[22].OneofWrappers = []interface{}{}
	file_types_v1_column_proto_msgTypes[23].OneofWrappers = []interface{}{}
	file_types_v1_column_proto_msgTypes[24].OneofWrappers = []interface{}{}
	file_types_v1_column_proto_msgTypes[25].OneofWrappers = []interface{}{
		(*DataType_Text)(nil),
		(*DataType_Jsonb)(nil),
		(*DataType_Boolean)(nil),
		(*DataType_Integer)(nil),
		(*DataType_Smallint)(nil),
		(*DataType_Bigint)(nil),
		(*DataType_Real)(nil),
		(*DataType_Double)(nil),
		(*DataType_Float)(nil),
		(*DataType_Char)(nil),
		(*DataType_Varchar)(nil),
		(*DataType_Bytea)(nil),
		(*DataType_Timestamp)(nil),
		(*DataType_Timestamptz)(nil),
		(*DataType_Date)(nil),
		(*DataType_Time)(nil),
		(*DataType_Timetz)(nil),
		(*DataType_Enum)(nil),
		(*DataType_Inet)(nil),
		(*DataType_Cidr)(nil),
		(*DataType_Macaddr)(nil),
		(*DataType_Macaddr8)(nil),
		(*DataType_Uuid)(nil),
		(*DataType_Numeric)(nil),
		(*DataType_Decimal)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_types_v1_column_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_v1_column_proto_goTypes,
		DependencyIndexes: file_types_v1_column_proto_depIdxs,
		MessageInfos:      file_types_v1_column_proto_msgTypes,
	}.Build()
	File_types_v1_column_proto = out.File
	file_types_v1_column_proto_rawDesc = nil
	file_types_v1_column_proto_goTypes = nil
	file_types_v1_column_proto_depIdxs = nil
}
